package org.maventy.android.app.visit;

import java.util.Calendar;

import org.maventy.R;
import org.maventy.android.app.ExplorePatient;
import org.maventy.android.db.VisitsDataSource;
import org.maventy.android.utils.Constants;
import org.maventy.android.utils.DataParcelable;
import org.maventy.android.utils.Tools;
import org.maventy.android.utils.VisitDB;
import org.maventy.android.utils.VisitParcelable;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

/**
 *   This class receives a VisitParcelable as input and it will save the visit values in the database
 *   it will also receive a DataParcelable with the patientID associated with the visit
 *   
 *   @author: jcancela
 *   
 */
public class SaveVisit extends Activity {
    private VisitsDataSource v_datasource;
    private EditText comment_input; 
    private Button saveVisit;
    private VisitDB myVisit;
    private int pid = 0;
 
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
	super.onCreate(savedInstanceState);

	// Read the last configuration stored in the database and setup the
	// configuration
	Tools.setSettings(this);
	Tools.setContext(this);

	setContentView(R.layout.visit_save); 

	comment_input = (EditText) findViewById(R.id.editText_save_visit_coment);

	try {
	    v_datasource = new VisitsDataSource(this);
	    v_datasource.open();
	} catch(Exception e) {
	    Tools.showToastMessageAndLog(Tools.getContext(), Tools.getStringResource(R.string.unknown_error),
			"SaveVisit", "Error opening Visit datasource" + e.toString());
	}

	try {
	    Intent i = getIntent();
	    VisitParcelable currentVisit = (VisitParcelable) i.getParcelableExtra(Constants.VISIT_PARCEL_STRING);
	    DataParcelable currentPatientID = (DataParcelable) i.getParcelableExtra(Constants.PATIENT_ID_PARCEL_STRING);

	    pid = currentPatientID.intParcelable;
	    myVisit = Tools.readParcelableVisit(currentVisit);

	} catch(Exception e) {
	    Tools.showToastMessageAndLog(Tools.getContext(), Tools.getStringResource(R.string.unknown_error),
			"SaveVisit", "Error reading parcelable data: " + e.toString());
	}

	saveVisit = (Button) findViewById(R.id.button_save_visit_save);
	saveVisit.setOnClickListener(new View.OnClickListener() {
	    @Override
	    public void onClick(View v) {             
		try {	
		    final Calendar cal = Calendar.getInstance();
		    myVisit.setStoredDate(cal);

		    myVisit.setComment(comment_input.getText().toString());

		    v_datasource.createVisit(myVisit.getWeight(), myVisit.getWeightPercentile(), myVisit.getWeightZscore(), 
			    myVisit.getLength(), myVisit.getLengthPercentile(), myVisit.getLengthZscore(), 
			    myVisit.getHead(), myVisit.getHeadPercentile(), myVisit.getHeadZscore(), 
			    myVisit.getBMI(), myVisit.getBMIPercentile(), myVisit.getBMIZscore(), 
			    myVisit.getWHPercentile(), myVisit.getWHZscore(), 
			    myVisit.getComment(), myVisit.getSex().toString(), myVisit.getPosition().toString(), 
			    myVisit.getBirthDateString(), myVisit.getVisitDateString(), myVisit.getStoredDateString(), "null", 
			    pid);

		    v_datasource.close();

		    try {
			DataParcelable dparcelable = new DataParcelable(pid); 
			Intent k = new Intent(SaveVisit.this, ExplorePatient.class);
			k.putExtra(Constants.PATIENT_ID_PARCEL_STRING, dparcelable);
			startActivity(k);  
		    } catch(Exception e) {
			Tools.showToastMessageAndLog(Tools.getContext(), Tools.getStringResource(R.string.unknown_error),
				"SaveVisit", "Error going back to ExplorePatient: " + e.toString());
		    }
		} catch(Exception e) {
		    Tools.showToastMessageAndLog(Tools.getContext(), Tools.getStringResource(R.string.unknown_error),
				"SaveVisit", "Error saving data visit: " + e.toString());
		}           	
	    }
	});
    }
}
